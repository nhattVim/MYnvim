name: Generate README for Plugins

on:
  push:
    paths:
      - "lua/plugins/**"
      - ".github/workflows/readme.yml"
  workflow_dispatch:

permissions:
  contents: write

jobs:
  generate-readme:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Lua
        uses: ljmf00/setup-lua@v1.0.0

      - name: Install jq for JSON parsing
        run: |
          sudo apt-get update
          sudo apt-get install -y jq

      - name: Run README generator
        shell: bash
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          mkdir -p .cache
          cp .github/workflows/README.header.md README.md
          echo "" >> README.md
          echo "_Last updated: $(date -u -d '+7 hour' '+%Y-%m-%d %H:%M UTC+7')_" >> README.md
          echo "" >> README.md

          declare -A printed_plugins
          declare -A grouped_plugins_temp

          # Find all plugins (ignore unused folder)
          mapfile -t plugin_files < <(find lua/plugins -type f -name '*.lua' | grep -v '/unused/')

          for plugin in "${plugin_files[@]}"; do
            mapfile -t repos < <(
              grep -oE '"[a-zA-Z0-9_.-]+/[a-zA-Z0-9_.-]+"' "$plugin" \
                | sed 's/"//g' \
                | grep -vE '^\.' \
                | grep -vE '^\$'
            )

            for name in "${repos[@]}"; do
              if [[ -n "$name" && -z "${printed_plugins[$name]}" ]]; then
                printed_plugins["$name"]=1

                if [[ "$plugin" =~ lua/plugins/([^/]+)/ ]]; then
                  group="${BASH_REMATCH[1]}"
                else
                  group="Others"
                fi

                grouped_plugins_temp["$group"]+="$name"$'\n'
              fi
            done
          done

          # Sort groups
          mapfile -t sorted_groups < <(printf "%s\n" "${!grouped_plugins_temp[@]}" | grep -v '^Others$' | sort)
          sorted_groups+=("Others")

          for group in "${sorted_groups[@]}"; do
            [ -z "${grouped_plugins_temp[$group]}" ] && continue

            echo "## $(tr '[:lower:]' '[:upper:]' <<< ${group:0:1})${group:1} Plugins" >> README.md
            echo "" >> README.md
            echo "| Name | Description | Optional? |" >> README.md
            echo "| ---- | ----------- | --------- |" >> README.md

            while read -r name; do
              [ -z "$name" ] && continue

              cache_file=".cache/$(echo "$name" | sed 's|/|_|g').json"
              if [ -f "$cache_file" ]; then
                desc=$(jq -r '.description' "$cache_file")
              else
                curl -s -H "Authorization: token $GITHUB_TOKEN" "https://api.github.com/repos/$name" -o "$cache_file"
                desc=$(jq -r '.description' "$cache_file")
              fi

              [[ "$desc" == "null" ]] && desc=""

              # Check optional
              optional=""
              files=$(grep -rl "$name" lua/plugins | grep -v '/unused/' || true)
              for file in $files; do
                if grep -qiE "\"$name\".*optional" "$file"; then
                  optional="_Optional_"
                  break
                fi
              done

              echo "| [$name](https://github.com/$name) | $desc | $optional |" >> README.md
            done <<< "${grouped_plugins_temp[$group]}"

            echo "" >> README.md
          done

          rm -rf .cache

          # Append footer if exists
          [ -f .github/workflows/README.footer.md ] && cat .github/workflows/README.footer.md >> README.md

      - name: Commit & Push
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add README.md || true
          git commit -m "âœ… Auto generate README on $(date -u -d '+7 hour' '+%Y-%m-%d %H:%M UTC+7')" || echo "Nothing to commit"
          git push
